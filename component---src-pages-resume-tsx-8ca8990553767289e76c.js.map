{"version":3,"sources":["webpack:///./src/pages/resume.tsx"],"names":["RenderResume","sections","className","map","section","RenderSection","key","title","entries","entry","i","RenderEntry","link","company","duration","description","header","href","start","end","body","Array","isArray","item","source","Page","data"],"mappings":"2NAeMA,G,UAA2B,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAClC,OACE,oCACE,sCACA,yBAAKC,UAAU,eACZD,EAASE,KAAI,SAAAC,GAAO,OACnB,kBAACC,EAAD,eAAeC,IAAG,WAAaF,EAAQG,OAAaH,WAQxDC,EAA6B,SAAC,GAAuB,IAArBE,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3C,OACE,6BAASN,UAAU,WACjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,iBAAiBK,GAC/B,yBAAKL,UAAU,iBAEhBM,EAAQL,KAAI,SAACM,EAAOC,GAAR,OACX,kBAACC,EAAD,eAAaL,IAAQC,EAAL,UAAoBG,GAASD,SAO/CE,EAAyB,SAAC,GAM1B,IALJJ,EAKI,EALJA,MACAK,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEMC,EACJ,oCACGT,GACC,wBAAIL,UAAU,eACXU,EAAO,uBAAGK,KAAML,GAAOL,GAAaA,GAGxCM,GAAW,wBAAIX,UAAU,iBAAiBW,GAC1CC,GACC,yBAAKZ,UAAU,kBAAqBY,EAASI,MAA7C,OAAyDJ,EAASK,MAKlEC,EAAOC,MAAMC,QAAQP,GACzB,wBAAIb,UAAU,aACXa,EAAYZ,KAAI,SAACoB,EAAMb,GAAP,OACf,wBAAIJ,IAAG,aAAeiB,EAAf,IAAuBb,GAC5B,kBAAC,IAAD,CAAec,OAAQD,SAK7B,kBAAC,IAAD,CAAeC,OAAQT,IAGzB,OACE,yBAAKb,UAAU,SACZc,EACD,yBAAKd,UAAU,qBAAqBkB,KAK3BK,UA9EI,WACjB,OACE,kBAAC,IAAD,KACE,kBAACzB,EAAiB0B","file":"component---src-pages-resume-tsx-8ca8990553767289e76c.js","sourcesContent":["import React, { FC } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Entry, Resume, Section } from '../@types/resume.d.ts'\nimport Layout from '../components/layout'\nimport data from '../data/resume'\nimport './index.scss'\n\nconst Page: FC<> = () => {\n  return (\n    <Layout>\n      <RenderResume {...data} />\n    </Layout>\n  )\n}\n\nconst RenderResume: FC<Resume> = ({ sections }) => {\n  return (\n    <>\n      <h2>resume</h2>\n      <div className=\"resume-body\">\n        {sections.map(section => (\n          <RenderSection key={`section-${section.title}`} {...section} />\n        ))}\n      </div>\n    </>\n  )\n}\n\n/** Renders a section, a titled list of entries. */\nconst RenderSection: FC<Section> = ({ title, entries }) => {\n  return (\n    <section className=\"section\">\n      <div className=\"section-title-container\">\n        <h2 className=\"section-title\">{title}</h2>\n        <div className=\"section-bar\" />\n      </div>\n      {entries.map((entry, i) => (\n        <RenderEntry key={`${title}-entry-${i}`} {...entry} />\n      ))}\n    </section>\n  )\n}\n\n/** A single entry, either a job entry or a list of skills. */\nconst RenderEntry: FC<Entry> = ({\n  title,\n  link,\n  company,\n  duration,\n  description,\n}) => {\n  const header = (\n    <>\n      {title && (\n        <h4 className=\"entry-title\">\n          {link ? <a href={link}>{title}</a> : title}\n        </h4>\n      )}\n      {company && <h5 className=\"entry-company\">{company}</h5>}\n      {duration && (\n        <div className=\"entry-duration\">{`${duration.start} -  ${duration.end}`}</div>\n      )}\n    </>\n  )\n\n  const body = Array.isArray(description) ? (\n    <ul className=\"languages\">\n      {description.map((item, i) => (\n        <li key={`languages-${item}-${i}`}>\n          <ReactMarkdown source={item} />\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <ReactMarkdown source={description} />\n  )\n\n  return (\n    <div className=\"entry\">\n      {header}\n      <div className=\"entry-description\">{body}</div>\n    </div>\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}