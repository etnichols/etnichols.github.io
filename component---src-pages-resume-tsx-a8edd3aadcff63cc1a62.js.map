{"version":3,"sources":["webpack:///./src/data/resume.ts","webpack:///./src/pages/resume.tsx"],"names":["data","sections","title","entries","company","duration","start","end","description","link","RenderResume","className","map","section","key","RenderSection","entry","i","RenderEntry","header","href","body","Array","isArray","item","source","Page"],"mappings":"+MAqIeA,EAnIM,CACnBC,SAAU,CACR,CACEC,MAAO,OACPC,QAAS,CACP,CACED,MAAO,oBACPE,QAAS,SACTC,SAAU,CACRC,MAAO,eACPC,IAAK,WAEPC,YAAa,CAAC,kGAAD,+RAMf,CACEN,MAAO,oBACPE,QAAS,SACTC,SAAU,CACRC,MAAO,iBACPC,IAAK,gBAEPC,YACE,qSAEJ,CACEN,MAAO,uBACPE,QAAS,SACTC,SAAU,CACRC,MAAO,YACPC,IAAK,cAGT,CACEL,MAAO,YACPO,KAAM,2BACNL,QAAS,sCACTC,SAAU,CACRC,MAAO,eACPC,IAAK,YAEPC,YAAa,CACX,kOACA,6KACA,qJACA,oMAGJ,CACEN,MAAO,+BACPE,QAAS,oBACTC,SAAU,CACRC,MAAO,iBACPC,IAAK,iBAEPC,YACE,sPAIR,CACEN,MAAO,YACPC,QAAS,CACP,CACEC,QAAS,yBACTF,MAAO,uBACPG,SAAU,CACRC,MAAO,WACPC,IAAK,eAKb,CACEL,MAAO,qBACPC,QAAS,CACP,CACEK,YAAa,CACX,mDACA,aACA,OACA,2EACA,yCACA,WACA,kCAKR,CACEN,MAAO,kBACPC,QAAS,CACP,CACED,MAAO,kBACPO,KAAM,2BACNJ,SAAU,CACRC,MAAO,gBACPC,IAAK,eAEPC,YAAa,CACX,6JACA,mFAGJ,CACEN,MAAO,gBACPO,KAAM,uBACNJ,SAAU,CACRC,MAAO,aACPC,IAAK,WAEPC,YAAa,CAAC,kGAAD,sHAKf,CACEN,MAAO,sCACPM,YAAa,CACX,0KACA,4GC9GNE,G,UAA2B,SAAC,GAAiB,IAAfT,EAAe,EAAfA,SAClC,OACE,oCACE,sCACA,yBAAKU,UAAU,eACZV,EAASW,KAAI,SAACC,GAAD,OACZ,kBAAC,EAAD,eAAeC,IAAG,WAAaD,EAAQX,OAAaW,WAQxDE,EAA6B,SAAC,GAAuB,IAArBb,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC3C,OACE,6BAASQ,UAAU,WACjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,iBAAiBT,GAC/B,yBAAKS,UAAU,iBAEhBR,EAAQS,KAAI,SAACI,EAAOC,GAAR,OACX,kBAAC,EAAD,eAAaH,IAAQZ,EAAL,UAAoBe,GAASD,SAO/CE,EAAyB,SAAC,GAM1B,IALJhB,EAKI,EALJA,MACAO,EAII,EAJJA,KACAL,EAGI,EAHJA,QACAC,EAEI,EAFJA,SACAG,EACI,EADJA,YAEMW,EACJ,oCACGjB,GACC,wBAAIS,UAAU,eACXF,EAAO,uBAAGW,KAAMX,GAAOP,GAAaA,GAGxCE,GAAW,wBAAIO,UAAU,iBAAiBP,GAC1CC,GACC,yBAAKM,UAAU,kBAAqBN,EAASC,MAA7C,OAAyDD,EAASE,MAKlEc,EAAOC,MAAMC,QAAQf,GACzB,wBAAIG,UAAU,aACXH,EAAYI,KAAI,SAACY,EAAMP,GAAP,OACf,wBAAIH,IAAG,aAAeU,EAAf,IAAuBP,GAC5B,kBAAC,IAAD,CAAeQ,OAAQD,SAK7B,kBAAC,IAAD,CAAeC,OAAQjB,IAGzB,OACE,yBAAKG,UAAU,SACZQ,EACD,yBAAKR,UAAU,qBAAqBU,KAK3BK,UA9EI,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAiB1B","file":"component---src-pages-resume-tsx-a8edd3aadcff63cc1a62.js","sourcesContent":["import { Resume } from '../@types/resume'\n\nconst data: Resume = {\n  sections: [\n    {\n      title: 'work',\n      entries: [\n        {\n          title: 'Software Engineer',\n          company: 'Google',\n          duration: {\n            start: 'October 2020',\n            end: 'Present',\n          },\n          description: [\n            `Fullstack development work (Java, Javascript) on [Google Forms](https://docs.google.com/forms).`,\n            `Implemented \"warning\" and \"hard block\" UI of Forms' [Data Loss Prevention](https://support.google.com/a/answer/9646351?hl=en) integration for file upload responses.`,\n            `Ensured Forms compatability with [Google Drive Resource Keys](https://support.google.com/a/answer/10685032?hl=en).`,\n          ],\n        },\n        {\n          title: 'Software Engineer',\n          company: 'Google',\n          duration: {\n            start: 'September 2017',\n            end: 'October 2020',\n          },\n          description:\n            'Fullstack development work (Java, Javascript) on [Google Assignments](https://edu.google.com/assignments), a set of free coursework management tools that integrate with learning management systems (LMS) to help university professors create, collect and review coursework using Google Apps.',\n        },\n        {\n          title: 'Engineering Resident',\n          company: 'Google',\n          duration: {\n            start: 'July 2018',\n            end: 'July 2019',\n          },\n        },\n        {\n          title: 'RightSite',\n          link: 'https://apple.co/2Uu5tUT',\n          company: 'University of Kansas Medical Center',\n          duration: {\n            start: 'October 2016',\n            end: 'May 2017',\n          },\n          description: [\n            'Developed a proof-of-concept iOS application to improve the precision of skin biopsy labeling for a team of dermatologists from the University of Kansas Medical Center (KUMC), using [React Native](https://reactnative.dev/).',\n            'Automated conversion of SVG assets created via Adobe Illustrator via a Python script: read more about that [here](https://etnichols.com/programming/illustrator-to-react).',\n            'Application led to a 69% improvement in the precision of anatomic site labeling in a pilot study of 100 smartphone-assisted skin biopsy labelings.',\n            'Accompanying research paper was published in the Health Informatics Journal in March 2020. Read the full research paper [here](https://journals.sagepub.com/doi/full/10.1177/1460458220910341).',\n          ],\n        },\n        {\n          title: 'Freelance software developer',\n          company: 'Astra Innovations',\n          duration: {\n            start: 'September 2016',\n            end: 'February 2017',\n          },\n          description:\n            'Created a Google-maps-based web application for [Astra Innovations](https://www.linkedin.com/company/astra-ai/) searching oil well drilling records by location and 30 different drilling metrics using React, Redux, Node.js/Express and MySQL.',\n        },\n      ],\n    },\n    {\n      title: 'education',\n      entries: [\n        {\n          company: 'B.S., Computer Science',\n          title: 'University of Kansas',\n          duration: {\n            start: 'Aug 2012',\n            end: 'May 2017',\n          },\n        },\n      ],\n    },\n    {\n      title: 'languages/software',\n      entries: [\n        {\n          description: [\n            'Javascript (React, Redux, React Native, Node.js)',\n            'Typescript',\n            'Java',\n            'GraphQL ([Gatsby](http://gatsbyjs.org), [Prisma](https://www.prisma.io))',\n            'Cloud hosting (Google App Engine, AWS)',\n            'HTML/CSS',\n            'InDesign, Photoshop, Sketch',\n          ],\n        },\n      ],\n    },\n    {\n      title: 'web development',\n      entries: [\n        {\n          title: 'Lead to Read KC',\n          link: 'https://leadtoreadkc.org',\n          duration: {\n            start: 'November 2019',\n            end: 'August 2020',\n          },\n          description: [\n            'Overhauled the Lead to Read KC website using Gatsby JS, using the existing Wordpress database as a headless CMS, deployed using Firebase and Gatsby Cloud.',\n            'Read more about the redesign process [here](programming/lead-to-read-website).',\n          ],\n        },\n        {\n          title: 'quotebook.xyz',\n          link: 'http://quotebook.xyz',\n          duration: {\n            start: 'March 2019',\n            end: 'Present',\n          },\n          description: [\n            `An ongoing project showcasing a variety of my favorite quotes I've collected through the years.`,\n            `Want to make your own? Check out the tutorial [here](https://etnichols.com/programming/react-quotebook-tutorial).`,\n          ],\n        },\n        {\n          title: 'Intro to React - Hackathon Workshop',\n          description: [\n            'Created and presented an introduction to React workshop at various NYC-based hackathons, including the 2019 CUNY Hackathon and 2020 Brooklyn College virtual hackathon.',\n            'Slides and source code available on [Github](https://github.com/etnichols/intro-to-react-workshop).',\n          ],\n        },\n      ],\n    },\n  ],\n}\n\nexport default data\n","import React, { FC } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { Entry, Resume, Section } from '../@types/resume.d.ts'\nimport Layout from '../components/layout'\nimport data from '../data/resume'\nimport './index.scss'\n\nconst Page: FC<> = () => {\n  return (\n    <Layout>\n      <RenderResume {...data} />\n    </Layout>\n  )\n}\n\nconst RenderResume: FC<Resume> = ({ sections }) => {\n  return (\n    <>\n      <h2>resume</h2>\n      <div className=\"resume-body\">\n        {sections.map((section: any) => (\n          <RenderSection key={`section-${section.title}`} {...section} />\n        ))}\n      </div>\n    </>\n  )\n}\n\n/** Renders a section, a titled list of entries. */\nconst RenderSection: FC<Section> = ({ title, entries }) => {\n  return (\n    <section className=\"section\">\n      <div className=\"section-title-container\">\n        <h2 className=\"section-title\">{title}</h2>\n        <div className=\"section-bar\" />\n      </div>\n      {entries.map((entry, i) => (\n        <RenderEntry key={`${title}-entry-${i}`} {...entry} />\n      ))}\n    </section>\n  )\n}\n\n/** A single entry, either a job entry or a list of skills. */\nconst RenderEntry: FC<Entry> = ({\n  title,\n  link,\n  company,\n  duration,\n  description,\n}) => {\n  const header = (\n    <>\n      {title && (\n        <h4 className=\"entry-title\">\n          {link ? <a href={link}>{title}</a> : title}\n        </h4>\n      )}\n      {company && <h5 className=\"entry-company\">{company}</h5>}\n      {duration && (\n        <div className=\"entry-duration\">{`${duration.start} -  ${duration.end}`}</div>\n      )}\n    </>\n  )\n\n  const body = Array.isArray(description) ? (\n    <ul className=\"languages\">\n      {description.map((item, i) => (\n        <li key={`languages-${item}-${i}`}>\n          <ReactMarkdown source={item} />\n        </li>\n      ))}\n    </ul>\n  ) : (\n    <ReactMarkdown source={description} />\n  )\n\n  return (\n    <div className=\"entry\">\n      {header}\n      <div className=\"entry-description\">{body}</div>\n    </div>\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}